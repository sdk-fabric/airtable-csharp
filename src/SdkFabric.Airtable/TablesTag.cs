/**
 * TablesTag automatically generated by SDKgen please do not edit this file manually
 * @see https://sdkgen.app
 */


using System.Collections.Generic;
using System.Text.Json;
using System.Threading.Tasks;
using RestSharp;
using Sdkgen.Client;
using Sdkgen.Client.Exception;

namespace SdkFabric.Airtable;

public class TablesTag : TagAbstract {
    public TablesTag(RestClient httpClient, Parser parser): base(httpClient, parser)
    {
    }


    /**
     * Creates a new table and returns the schema for the newly created table.
     */
    public async Task<Table> Create(string baseId, Table payload)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("baseId", baseId);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/v0/meta/bases/:baseId/tables", pathParams), Method.Post);
        this.Parser.Query(request, queryParams, queryStructNames);
        request.AddJsonBody(JsonSerializer.Serialize(payload));

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<Table>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }

    public async Task<Table> Update(string baseId, string tableIdOrName, Table payload)
    {
        Dictionary<string, object> pathParams = new();
        pathParams.Add("baseId", baseId);
        pathParams.Add("tableIdOrName", tableIdOrName);

        Dictionary<string, object> queryParams = new();

        List<string> queryStructNames = new();

        RestRequest request = new(this.Parser.Url("/v0/meta/bases/:baseId/tables/:tableIdOrName", pathParams), Method.Patch);
        this.Parser.Query(request, queryParams, queryStructNames);
        request.AddJsonBody(JsonSerializer.Serialize(payload));

        RestResponse response = await this.HttpClient.ExecuteAsync(request);

        if (response.IsSuccessful)
        {
            return this.Parser.Parse<Table>(response.Content);
        }

        throw (int) response.StatusCode switch
        {
            _ => throw new UnknownStatusCodeException("The server returned an unknown status code"),
        };
    }


}
